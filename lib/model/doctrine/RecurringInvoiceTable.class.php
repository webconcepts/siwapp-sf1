<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RecurringInvoiceTable extends Doctrine_Table
{
  public static $period_types = array(
    'year'  => 'Years',
    'month' => 'Months',
    'week'  => 'Weeks',
    'day'   => 'Days'
    );
  
  /**
   * Check status on all recurringInvoices
   * and sets 'pending' if needed
   * 
   * @return the number of recurring invoices that have the 'pending' status
   * @author JoeZ
   */
  public static function setPendingInvoices()
  {
    $recurrings = RecurringInvoiceQuery::create()
      ->status(array(RecurringInvoice::ENABLED, RecurringInvoice::PENDING))
      ->execute();
    $pending_count = 0;
    foreach($recurrings as $r)
    {
      $r->checkStatus();
      if($r->status == RecurringInvoice::PENDING)
      {
        $pending_count++;
      }
      $r->save();
    }
    return $pending_count;
  }
    
  /**
   * creates all the pending invoices
   *
   * @return array of created invoices
   **/
  public static function createPendingInvoices()
  {
    // first check status on all recurring
    RecurringInvoiceTable::setPendingInvoices();

    $collection = RecurringInvoiceQuery::create()
      ->status(RecurringInvoice::PENDING)
      ->execute();
    $created = array();
    if ($collection->count())
    {
      foreach ($collection as $r)
      {
        while($r->countPendingInvoices() > 0)
        {
          $i = $r->generateInvoice();
          if( $i )
          {
            $created[] = $i;            
          }          
          $r->refresh(true);  
        }
        $r->checkStatus()->save();
      }      
    }
    return $created;
  }
}